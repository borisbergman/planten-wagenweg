/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_ALIVE_PB_H_INCLUDED
#define PB_ALIVE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Alive {
    int64_t time;
} Alive;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Alive_init_default                       {0}
#define Alive_init_zero                          {0}

/* Field tags (for use in manual encoding/decoding) */
#define Alive_time_tag                           1

/* Struct field encoding specification for nanopb */
#define Alive_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    time,              1)
#define Alive_CALLBACK NULL
#define Alive_DEFAULT NULL

extern const pb_msgdesc_t Alive_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Alive_fields &Alive_msg

/* Maximum encoded size of messages (where known) */
#define ALIVE_PB_H_MAX_SIZE                      Alive_size
#define Alive_size                               11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
